service: StockDataLambda

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  region: us-west-2

functions:
  dailyStockData:
    handler: handler.dailyStockData
    role: DynamoIAM
    timeout: 500 # 5 minutes
    events:
      # Invoke Lambda function 4:30pm Mon-Fri PST
      - schedule: cron(30 23 ? * MON-FRI *)
    layers:
      - arn:aws:lambda:us-west-2:823881607878:layer:chromedriver:1
  updateTickers:
    handler: handler.updateTickerSymbols
    role: DynamoIAM
  getTickers:
    handler: handler.getTickerSymbols
    role: DynamoIAM

resources:
  Resources:
    DynamoIAM:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: DynamoIAM
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: DynamoIAMPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                  Resource: "*"

custom:
  pythonRequirements:
    usePipenv: false

plugins:
  - serverless-python-requirements              
